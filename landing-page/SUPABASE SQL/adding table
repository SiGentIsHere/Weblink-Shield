-- =========================================================
-- WebLink Shield â€“ Database Schema
-- Matches latest ERD
-- =========================================================

create extension if not exists "pgcrypto";

-- =========================
-- Roles & Users
-- =========================
create table if not exists role (
  role_id uuid primary key default gen_random_uuid(),
  name text unique not null check (name in ('free','premium','admin')),
  created_at timestamptz not null default now()
);

create table if not exists "user" (
  user_id uuid primary key default gen_random_uuid(),
  role_id uuid not null references role(role_id) on delete restrict,
  email text unique not null,
  username text unique,
  password_hash text,
  status text not null default 'active' check (status in ('active','suspended')),
  created_at timestamptz not null default now()
);

-- =========================
-- Scan & Threat Analysis
-- =========================
create table if not exists scan (
  scan_id uuid primary key default gen_random_uuid(),
  user_id uuid not null references "user"(user_id) on delete cascade,
  url_scanned text not null,
  domain text not null,
  submitted_at timestamptz not null default now(),
  analyzed_at timestamptz,
  status text not null default 'Complete' check (status in ('Pending','Complete','Error')),
  overall_score int check (overall_score between 0 and 100),
  risk_level text check (risk_level in ('Low','Medium','High'))
);

create table if not exists threat_summary (
  summary_id uuid primary key default gen_random_uuid(),
  scan_id uuid not null references scan(scan_id) on delete cascade,
  category text not null,
  status text not null
);

create table if not exists detailed_report (
  detail_id uuid primary key default gen_random_uuid(),
  scan_id uuid not null references scan(scan_id) on delete cascade,
  type text not null,
  extra_info jsonb,
  recommendation text
);

-- =========================
-- Reviews & History
-- =========================
create table if not exists review (
  review_id uuid primary key default gen_random_uuid(),
  user_id uuid not null references "user"(user_id) on delete cascade,
  rating int not null check (rating between 1 and 5),
  comment text,
  created_at timestamptz not null default now()
);

create table if not exists history (
  history_id uuid primary key default gen_random_uuid(),
  user_id uuid not null references "user"(user_id) on delete cascade,
  scan_id uuid not null references scan(scan_id) on delete cascade,
  saved_at timestamptz not null default now(),
  unique (user_id, scan_id)
);

-- =========================
-- Admin & Audit
-- =========================
create table if not exists admin_action (
  action_id uuid primary key default gen_random_uuid(),
  admin_id uuid not null references "user"(user_id) on delete cascade,
  target_user_id uuid references "user"(user_id) on delete set null,
  action_type text not null check (action_type in ('suspend','reinstate','promote','demote','reset_scan_limit')),
  reason text,
  occurred_at timestamptz not null default now()
);

create table if not exists audit_log (
  log_id uuid primary key default gen_random_uuid(),
  user_id uuid references "user"(user_id) on delete set null,
  action text not null,
  metadata jsonb,
  occurred_at timestamptz not null default now()
);

-- =========================
-- Plans, Policies & Subscription
-- =========================
create table if not exists plan (
  plan_id uuid primary key default gen_random_uuid(),
  code text unique not null,
  name text not null,
  is_active boolean not null default true,
  created_at timestamptz not null default now()
);

create table if not exists plan_policy (
  policy_id uuid primary key default gen_random_uuid(),
  plan_id uuid not null references plan(plan_id) on delete cascade,
  key text not null,
  value text not null,
  unique (plan_id, key)
);

create table if not exists subscription (
  user_id uuid primary key references "user"(user_id) on delete cascade,
  plan_id uuid not null references plan(plan_id),
  status text not null default 'active' check (status in ('active','cancelled','past_due')),
  current_period_end timestamptz
);

create table if not exists usage_counter (
  user_id uuid not null references "user"(user_id) on delete cascade,
  counter_date date not null,
  scans int not null default 0,
  primary key (user_id, counter_date)
);

-- =========================
-- Flagged Sites
-- =========================
create table if not exists flagged_site (
  id uuid primary key default gen_random_uuid(),
  domain text unique not null,
  severity text not null check (severity in ('low','medium','high')),
  reason text,
  source text,
  last_seen timestamptz not null default now()
);

-- =========================
-- Seed Data
-- =========================
insert into role(name) values ('free'),('premium'),('admin')
on conflict (name) do nothing;

insert into plan(code,name) values ('free','Free'),('premium','Premium')
on conflict (code) do nothing;

insert into flagged_site (domain,severity,reason,source) values
('paypa1-resolve-secure.com','high','look-alike domain','seed'),
('login-secure-banking-verify.net','high','phishing campaign test','seed'),
('bitgift-double-promo.io','medium','crypto giveaway scam','seed'),
('track-click-ads.info','low','ad/malware redirects','seed')
on conflict (domain) do nothing;
